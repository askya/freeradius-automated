# -*- text -*-
######################################################################
#
#	This is a virtual server that handles *only* inner tunnel
#	requests for EAP-TTLS and PEAP types.
#
#	$Id: 70b1d8da255a740d2d1b59808393722766dc6a60 $
#
######################################################################

{% for tunnel_server in site_def.tunnel_servers %}

#
# Inner Tunnel {{ tunnel_server.name }}
# 
server {{ tunnel_server.name }} {

listen {
       ipaddr = {{ tunnel_server.listen.ip }}
       port = {{ tunnel_server.listen.port }}
       type = auth
}


authorize {
	filter_username

	chap
	mschap
	suffix
	update control {
		&Proxy-To-Realm := LOCAL
	}
	eap {
		ok = return
	}

	{{ tunnel_server.user_store }}

	expiration

	logintime

	pap
}


#  Authentication.
#
authenticate {
	Auth-Type PAP {
		pap
	}

	Auth-Type CHAP {
		chap
	}

	Auth-Type MS-CHAP {
		mschap
	}

	mschap

	eap
}

#  Session database, used for checking Simultaneous-Use. Either the radutmp

session {
	{{ tunnel_server.user_store }}
}


#  Post-Authentication
post-auth {
        {{ tunnel_server.user_store }}

	Post-Auth-Type REJECT {
		# log failed authentications in SQL, too.
	        {{ tunnel_server.user_store }}
		attr_filter.access_reject

		#
		#  Let the outer session know which module failed, and why.
		#
		update outer.session-state {
			&Module-Failure-Message := &request:Module-Failure-Message
		}
	}
}
pre-proxy {
}

post-proxy {
	eap
}

} # inner-tunnel server block
{% endfor %}
